{
  "bomFormat": "CycloneDX",
  "specVersion": "1.6",
  "version": 1,
  "components": [
    {
      "type": "cryptographic-asset",
      "name": "crypto/sha256.New",
      "cryptoProperties": {
        "algorithmProperties": {
          "cryptoFunctions": [
            "digest"
          ],
          "primitive": "hash"
        },
        "assetType": "algorithm"
      },
      "properties": [
        {
          "name": "callingFunction",
          "value": "cacheFile"
        },
        {
          "name": "file",
          "value": "pkg/asset/agent/image/cache.go"
        },
        {
          "name": "line",
          "value": 168
        },
        {
          "name": "rationale",
          "value": "Used to produce a checksum and validate cached files."
        }
      ]
    },
    {
      "type": "cryptographic-asset",
      "name": "crypto/sha256.New",
      "cryptoProperties": {
        "algorithmProperties": {
          "cryptoFunctions": [
            "digest"
          ],
          "primitive": "hash"
        },
        "assetType": "algorithm"
      },
      "properties": [
        {
          "name": "callingFunction",
          "value": "verifyCacheFile"
        },
        {
          "name": "file",
          "value": "pkg/asset/agent/image/oc.go"
        },
        {
          "name": "line",
          "value": 252
        },
        {
          "name": "rationale",
          "value": "Used to validate cached installer files and inform the user if the installer is outdated."
        }
      ]
    },
    {
      "type": "cryptographic-asset",
      "name": "crypto/rand.Int",
      "cryptoProperties": {
        "algorithmProperties": {
          "primitive": "drbg"
        },
        "assetType": "algorithm"
      },
      "properties": [
        {
          "name": "callingFunction",
          "value": "generateRandomPassword"
        },
        {
          "name": "file",
          "value": "pkg/asset/ignition/bootstrap/baremetal/ironic_creds.go"
        },
        {
          "name": "line",
          "value": 43
        },
        {
          "name": "rationale",
          "value": "Used to randomly select characters for passwords."
        }
      ]
    },
    {
      "type": "cryptographic-asset",
      "name": "crypto/rand.Int",
      "cryptoProperties": {
        "algorithmProperties": {
          "primitive": "drbg"
        },
        "assetType": "algorithm"
      },
      "properties": [
        {
          "name": "callingFunction",
          "value": "generateRandomPasswordHash"
        },
        {
          "name": "file",
          "value": "pkg/asset/password/password.go"
        },
        {
          "name": "line",
          "value": 54
        },
        {
          "name": "rationale",
          "value": "Used to select random characters for passwords."
        }
      ]
    },
    {
      "type": "cryptographic-asset",
      "name": "crypto/rand.Int",
      "cryptoProperties": {
        "algorithmProperties": {
          "primitive": "drbg"
        },
        "assetType": "algorithm"
      },
      "properties": [
        {
          "name": "callingFunction",
          "value": "generateRandomPasswordHash"
        },
        {
          "name": "file",
          "value": "pkg/asset/password/password.go"
        },
        {
          "name": "line",
          "value": 64
        },
        {
          "name": "rationale",
          "value": "Used to select random characters for passwords."
        }
      ]
    },
    {
      "type": "cryptographic-asset",
      "name": "golang.org/x/crypto/bcrypt.GenerateFromPassword",
      "cryptoProperties": {
        "algorithmProperties": {
          "cryptoFunctions": [
            "unknown"
          ],
          "primitive": "unknown"
        },
        "assetType": "algorithm"
      },
      "properties": [
        {
          "name": "callingFunction",
          "value": "generateRandomPasswordHash"
        },
        {
          "name": "file",
          "value": "pkg/asset/password/password.go"
        },
        {
          "name": "line",
          "value": 80
        },
        {
          "name": "rationale",
          "value": "Generate a hash of a randomly generated password."
        }
      ]
    },
    {
      "type": "cryptographic-asset",
      "name": "golang.org/x/crypto/ssh.NewPublicKey",
      "cryptoProperties": {
        "assetType": "protocol"
      },
      "properties": [
        {
          "name": "callingFunction",
          "value": "Generate"
        },
        {
          "name": "file",
          "value": "pkg/asset/tls/bootstrapsshkeypair.go"
        },
        {
          "name": "line",
          "value": 47
        },
        {
          "name": "rationale",
          "value": "Used to save a newly generated ssh keypair to an authorized_keys file."
        }
      ]
    },
    {
      "type": "cryptographic-asset",
      "name": "golang.org/x/crypto/ssh.MarshalAuthorizedKey",
      "cryptoProperties": {
        "assetType": "protocol"
      },
      "properties": [
        {
          "name": "callingFunction",
          "value": "Generate"
        },
        {
          "name": "file",
          "value": "pkg/asset/tls/bootstrapsshkeypair.go"
        },
        {
          "name": "line",
          "value": 54
        },
        {
          "name": "rationale",
          "value": "Used to save a newly generated ssh keypair to an authorized_keys file."
        }
      ]
    },
    {
      "type": "cryptographic-asset",
      "name": "crypto/rsa.GenerateKey",
      "cryptoProperties": {
        "algorithmProperties": {
          "cryptoFunctions": [
            "keygen"
          ],
          "primitive": "pke"
        },
        "assetType": "algorithm"
      },
      "properties": [
        {
          "name": "callingFunction",
          "value": "PrivateKey"
        },
        {
          "name": "file",
          "value": "pkg/asset/tls/tls.go"
        },
        {
          "name": "line",
          "value": 55
        },
        {
          "name": "rationale",
          "value": "Used to generate a random SSH private key"
        },
        {
          "name": "keyStrength",
          "value": "2048"
        }
      ]
    },
    {
      "type": "cryptographic-asset",
      "name": "crypto/rand.Int",
      "cryptoProperties": {
        "algorithmProperties": {
          "primitive": "drbg"
        },
        "assetType": "algorithm"
      },
      "properties": [
        {
          "name": "callingFunction",
          "value": "SelfSignedCertificate"
        },
        {
          "name": "file",
          "value": "pkg/asset/tls/tls.go"
        },
        {
          "name": "line",
          "value": 66
        },
        {
          "name": "rationale",
          "value": "Used to generate a serial number for a self-signed certificate."
        }
      ]
    },
    {
      "type": "cryptographic-asset",
      "name": "crypto/rand.Int",
      "cryptoProperties": {
        "algorithmProperties": {
          "primitive": "drbg"
        },
        "assetType": "algorithm"
      },
      "properties": [
        {
          "name": "callingFunction",
          "value": "SignedCertificate"
        },
        {
          "name": "file",
          "value": "pkg/asset/tls/tls.go"
        },
        {
          "name": "line",
          "value": 104
        },
        {
          "name": "rationale",
          "value": "Used to generate a serial number for a signed certificate."
        }
      ]
    },
    {
      "type": "cryptographic-asset",
      "name": "crypto/sha1.Sum",
      "cryptoProperties": {
        "algorithmProperties": {
          "cryptoFunctions": [
            "digest"
          ],
          "primitive": "hash"
        },
        "assetType": "algorithm"
      },
      "properties": [
        {
          "name": "callingFunction",
          "value": "generateSubjectKeyID"
        },
        {
          "name": "file",
          "value": "pkg/asset/tls/tls.go"
        },
        {
          "name": "line",
          "value": 152
        },
        {
          "name": "rationale",
          "value": "Used to generate a hash of an SSH public key."
        }
      ]
    },
    {
      "type": "cryptographic-asset",
      "name": "golang.org/x/crypto/ssh/agent.NewClient",
      "cryptoProperties": {
        "assetType": "protocol"
      },
      "properties": [
        {
          "name": "callingFunction",
          "value": "getAgent"
        },
        {
          "name": "file",
          "value": "pkg/gather/ssh/agent.go"
        },
        {
          "name": "line",
          "value": 21
        },
        {
          "name": "rationale",
          "value": "Used to establish SSH connections."
        }
      ]
    },
    {
      "type": "cryptographic-asset",
      "name": "golang.org/x/crypto/ssh/agent.NewKeyring",
      "cryptoProperties": {
        "assetType": "protocol"
      },
      "properties": [
        {
          "name": "callingFunction",
          "value": "newAgent"
        },
        {
          "name": "file",
          "value": "pkg/gather/ssh/agent.go"
        },
        {
          "name": "line",
          "value": 37
        },
        {
          "name": "rationale",
          "value": "Used to store keys in memory for SSH sessions."
        }
      ]
    },
    {
      "type": "cryptographic-asset",
      "name": "golang.org/x/crypto/ssh.Dial",
      "cryptoProperties": {
        "assetType": "protocol"
      },
      "properties": [
        {
          "name": "callingFunction",
          "value": "NewClient"
        },
        {
          "name": "file",
          "value": "pkg/gather/ssh/ssh.go"
        },
        {
          "name": "line",
          "value": 29
        },
        {
          "name": "rationale",
          "value": "Used to create a new SSH client which can be used to SSH to address using user and the keys."
        }
      ]
    },
    {
      "type": "cryptographic-asset",
      "name": "golang.org/x/crypto/ssh.PublicKeysCallback",
      "cryptoProperties": {
        "assetType": "protocol"
      },
      "properties": [
        {
          "name": "callingFunction",
          "value": "NewClient"
        },
        {
          "name": "file",
          "value": "pkg/gather/ssh/ssh.go"
        },
        {
          "name": "line",
          "value": 35
        },
        {
          "name": "rationale",
          "value": "Use a callback rather than PublicKeys"
        }
      ]
    },
    {
      "type": "cryptographic-asset",
      "name": "golang.org/x/crypto/ssh.InsecureIgnoreHostKey",
      "cryptoProperties": {
        "assetType": "protocol"
      },
      "properties": [
        {
          "name": "callingFunction",
          "value": "NewClient"
        },
        {
          "name": "file",
          "value": "pkg/gather/ssh/ssh.go"
        },
        {
          "name": "line",
          "value": 38
        },
        {
          "name": "rationale",
          "value": "Used to ignore insecure hosts."
        }
      ]
    },
    {
      "type": "cryptographic-asset",
      "name": "golang.org/x/crypto/ssh/agent.ForwardToAgent",
      "cryptoProperties": {
        "assetType": "protocol"
      },
      "properties": [
        {
          "name": "callingFunction",
          "value": "NewClient"
        },
        {
          "name": "file",
          "value": "pkg/gather/ssh/ssh.go"
        },
        {
          "name": "line",
          "value": 50
        },
        {
          "name": "rationale",
          "value": "Used for routing authentication requests to the correct keyring."
        }
      ]
    },
    {
      "type": "cryptographic-asset",
      "name": "golang.org/x/crypto/ssh/agent.RequestAgentForwarding",
      "cryptoProperties": {
        "assetType": "protocol"
      },
      "properties": [
        {
          "name": "callingFunction",
          "value": "Run"
        },
        {
          "name": "file",
          "value": "pkg/gather/ssh/ssh.go"
        },
        {
          "name": "line",
          "value": 64
        },
        {
          "name": "rationale",
          "value": "Used to setup agent forwarding for the SSH session."
        }
      ]
    },
    {
      "type": "cryptographic-asset",
      "name": "golang.org/x/crypto/ssh.ParseRawPrivateKey",
      "cryptoProperties": {
        "assetType": "protocol"
      },
      "properties": [
        {
          "name": "callingFunction",
          "value": "LoadPrivateSSHKeys"
        },
        {
          "name": "file",
          "value": "pkg/gather/ssh/ssh.go"
        },
        {
          "name": "line",
          "value": 136
        },
        {
          "name": "rationale",
          "value": "Used to parse private key data after reading it from a file on disk."
        }
      ]
    },
    {
      "type": "cryptographic-asset",
      "name": "crypto/sha256.New",
      "cryptoProperties": {
        "algorithmProperties": {
          "cryptoFunctions": [
            "digest"
          ],
          "primitive": "hash"
        },
        "assetType": "algorithm"
      },
      "properties": [
        {
          "name": "callingFunction",
          "value": "cacheFile"
        },
        {
          "name": "file",
          "value": "pkg/tfvars/internal/cache/cache.go"
        },
        {
          "name": "line",
          "value": 145
        },
        {
          "name": "rationale",
          "value": "Used to hash files on disk for cache logic."
        }
      ]
    },
    {
      "type": "cryptographic-asset",
      "name": "crypto/md5.Sum",
      "cryptoProperties": {
        "algorithmProperties": {
          "cryptoFunctions": [
            "digest"
          ],
          "primitive": "hash"
        },
        "assetType": "algorithm"
      },
      "properties": [
        {
          "name": "callingFunction",
          "value": "CloudControllerUID"
        },
        {
          "name": "file",
          "value": "pkg/types/gcp/clouduid.go"
        },
        {
          "name": "line",
          "value": 12
        },
        {
          "name": "rationale",
          "value": "Used to generate an ID for the Cloud Controller bashed on a hash of the infrastructure ID."
        }
      ]
    },
    {
      "type": "cryptographic-asset",
      "name": "crypto/rand.Int",
      "cryptoProperties": {
        "algorithmProperties": {
          "primitive": "drbg"
        },
        "assetType": "algorithm"
      },
      "properties": [
        {
          "name": "callingFunction",
          "value": "SetPlatformDefaults"
        },
        {
          "name": "file",
          "value": "pkg/types/powervs/defaults/platform.go"
        },
        {
          "name": "line",
          "value": 21
        },
        {
          "name": "rationale",
          "value": "Used to generate a random number for the third octet of the network ID."
        }
      ]
    },
    {
      "type": "cryptographic-asset",
      "name": "crypto/rand.Int",
      "cryptoProperties": {
        "algorithmProperties": {
          "primitive": "drbg"
        },
        "assetType": "algorithm"
      },
      "properties": [
        {
          "name": "callingFunction",
          "value": "genRandNum"
        },
        {
          "name": "file",
          "value": "pkg/types/powervs/validation/platform_test.go"
        },
        {
          "name": "line",
          "value": 21
        },
        {
          "name": "rationale",
          "value": "Used to generate a random number, which is used to get a random zone name for testing."
        }
      ]
    },
    {
      "type": "cryptographic-asset",
      "name": "golang.org/x/crypto/ssh.ParseAuthorizedKey",
      "cryptoProperties": {
        "assetType": "protocol"
      },
      "properties": [
        {
          "name": "callingFunction",
          "value": "validateFIPSconfig"
        },
        {
          "name": "file",
          "value": "pkg/types/validation/installconfig.go"
        },
        {
          "name": "line",
          "value": 980
        },
        {
          "name": "rationale",
          "value": "Reads public SSH keys to perform additional validation that ensure the key is compliant with FIPS compatible key types."
        }
      ]
    },
    {
      "type": "cryptographic-asset",
      "name": "golang.org/x/crypto/ssh.ParseAuthorizedKey",
      "cryptoProperties": {
        "assetType": "protocol"
      },
      "properties": [
        {
          "name": "callingFunction",
          "value": "SSHPublicKey"
        },
        {
          "name": "file",
          "value": "pkg/validate/validate.go"
        },
        {
          "name": "line",
          "value": 192
        },
        {
          "name": "rationale",
          "value": "Helper function that relies on ssh.ParseAuthorizedKey() to validate the public SSH key, and returns an error if the key is invalid."
        }
      ]
    },
    {
      "type": "cryptographic-asset",
      "name": "crypto/sha256.New",
      "cryptoProperties": {
        "algorithmProperties": {
          "cryptoFunctions": [
            "digest"
          ],
          "primitive": "hash"
        },
        "assetType": "algorithm"
      },
      "properties": [
        {
          "name": "callingFunction",
          "value": "resourceVSpherePrivateImportOvaCreate"
        },
        {
          "name": "file",
          "value": "terraform/providers/vsphereprivate/resource_vsphereprivate_import_ova.go"
        },
        {
          "name": "line",
          "value": 346
        },
        {
          "name": "rationale",
          "value": "Used to hash the contents of corrupt .ovf files. The hash is used in error messages."
        }
      ]
    }
  ]
}
