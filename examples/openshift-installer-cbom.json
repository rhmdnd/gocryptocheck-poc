{
  "bomFormat": "CycloneDX",
  "specVersion": "1.6",
  "version": 1,
  "components": [
    {
      "type": "cryptographic-asset",
      "name": "crypto/sha256.New",
      "cryptoProperties": {
        "algorithmProperties": {
          "cryptoFunctions": [
            "digest"
          ],
          "primitive": "hash"
        },
        "assetType": "algorithm"
      },
      "properties": [
        {
          "name": "pkg/asset/agent/image/cache.go:168",
          "value": "gocryptocheck: Used to produce a checksum and validate cached files.\nWrap the reader in TeeReader to calculate sha256 checksum on the fly"
        }
      ]
    },
    {
      "type": "cryptographic-asset",
      "name": "crypto/sha256.New",
      "cryptoProperties": {
        "algorithmProperties": {
          "cryptoFunctions": [
            "digest"
          ],
          "primitive": "hash"
        },
        "assetType": "algorithm"
      },
      "properties": [
        {
          "name": "pkg/asset/agent/image/oc.go:252",
          "value": "gocryptocheck: Used to validate cached installer files and inform the user if the installer is outdated."
        }
      ]
    },
    {
      "type": "cryptographic-asset",
      "name": "crypto/rand.Int",
      "cryptoProperties": {
        "algorithmProperties": {
          "cryptoFunctions": [
            "unknown"
          ],
          "primitive": "drbg"
        },
        "assetType": "algorithm"
      },
      "properties": [
        {
          "name": "pkg/asset/ignition/bootstrap/baremetal/ironic_creds.go:43",
          "value": "gocryptocheck: Used to randomly select characters for passwords."
        }
      ]
    },
    {
      "type": "cryptographic-asset",
      "name": "crypto/rand.Int",
      "cryptoProperties": {
        "algorithmProperties": {
          "cryptoFunctions": [
            "unknown"
          ],
          "primitive": "drbg"
        },
        "assetType": "algorithm"
      },
      "properties": [
        {
          "name": "pkg/asset/password/password.go:54",
          "value": "gocryptocheck: Used to select random characters for passwords."
        }
      ]
    },
    {
      "type": "cryptographic-asset",
      "name": "crypto/rand.Int",
      "cryptoProperties": {
        "algorithmProperties": {
          "cryptoFunctions": [
            "unknown"
          ],
          "primitive": "drbg"
        },
        "assetType": "algorithm"
      },
      "properties": [
        {
          "name": "pkg/asset/password/password.go:64",
          "value": "gocryptocheck: Used to select random characters for passwords."
        }
      ]
    },
    {
      "type": "cryptographic-asset",
      "name": "golang.org/x/crypto/bcrypt.GenerateFromPassword",
      "cryptoProperties": {
        "algorithmProperties": {
          "cryptoFunctions": [
            "unknown"
          ],
          "primitive": "unknown"
        },
        "assetType": "algorithm"
      },
      "properties": [
        {
          "name": "pkg/asset/password/password.go:80",
          "value": "gocryptocheck: Generate a hash of a randomly generated password."
        }
      ]
    },
    {
      "type": "cryptographic-asset",
      "name": "golang.org/x/crypto/ssh.NewPublicKey",
      "cryptoProperties": {
        "assetType": "protocol"
      },
      "properties": [
        {
          "name": "pkg/asset/tls/bootstrapsshkeypair.go:47",
          "value": "gocryptocheck: Used to save a newly generated ssh keypair to an authorized_keys file."
        }
      ]
    },
    {
      "type": "cryptographic-asset",
      "name": "golang.org/x/crypto/ssh.MarshalAuthorizedKey",
      "cryptoProperties": {
        "assetType": "protocol"
      },
      "properties": [
        {
          "name": "pkg/asset/tls/bootstrapsshkeypair.go:54",
          "value": "gocryptocheck: Used to save a newly generated ssh keypair to an authorized_keys file."
        }
      ]
    },
    {
      "type": "cryptographic-asset",
      "name": "crypto/rsa.GenerateKey",
      "cryptoProperties": {
        "algorithmProperties": {
          "cryptoFunctions": [
            "keygen"
          ],
          "primitive": "pke"
        },
        "assetType": "algorithm"
      },
      "properties": [
        {
          "name": "pkg/asset/tls/tls.go:55",
          "value": "gocryptocheck: Used to generate a random SSH private key; properties-keyStrength: 2048"
        }
      ]
    },
    {
      "type": "cryptographic-asset",
      "name": "crypto/rand.Int",
      "cryptoProperties": {
        "algorithmProperties": {
          "cryptoFunctions": [
            "unknown"
          ],
          "primitive": "drbg"
        },
        "assetType": "algorithm"
      },
      "properties": [
        {
          "name": "pkg/asset/tls/tls.go:66",
          "value": "gocryptocheck: Used to generate a serial number for a self-signed certificate."
        }
      ]
    },
    {
      "type": "cryptographic-asset",
      "name": "crypto/rand.Int",
      "cryptoProperties": {
        "algorithmProperties": {
          "cryptoFunctions": [
            "unknown"
          ],
          "primitive": "drbg"
        },
        "assetType": "algorithm"
      },
      "properties": [
        {
          "name": "pkg/asset/tls/tls.go:104",
          "value": "gocryptocheck: Used to generate a serial number for a signed certificate."
        }
      ]
    },
    {
      "type": "cryptographic-asset",
      "name": "crypto/sha1.Sum",
      "cryptoProperties": {
        "algorithmProperties": {
          "cryptoFunctions": [
            "digest"
          ],
          "primitive": "hash"
        },
        "assetType": "algorithm"
      },
      "properties": [
        {
          "name": "pkg/asset/tls/tls.go:152",
          "value": "gocryptocheck: Used to generate a hash of an SSH public key."
        }
      ]
    },
    {
      "type": "cryptographic-asset",
      "name": "golang.org/x/crypto/ssh/agent.NewClient",
      "cryptoProperties": {
        "assetType": "protocol"
      },
      "properties": [
        {
          "name": "pkg/gather/ssh/agent.go:21",
          "value": "gocryptocheck: Used to establish SSH connections."
        }
      ]
    },
    {
      "type": "cryptographic-asset",
      "name": "golang.org/x/crypto/ssh/agent.NewKeyring",
      "cryptoProperties": {
        "assetType": "protocol"
      },
      "properties": [
        {
          "name": "pkg/gather/ssh/agent.go:37",
          "value": "gocryptocheck: Used to store keys in memory for SSH sessions."
        }
      ]
    },
    {
      "type": "cryptographic-asset",
      "name": "golang.org/x/crypto/ssh.Dial",
      "cryptoProperties": {
        "assetType": "protocol"
      },
      "properties": [
        {
          "name": "pkg/gather/ssh/ssh.go:29",
          "value": "gocryptocheck: Used to create a new SSH client which can be used to SSH to address using user and the keys."
        }
      ]
    },
    {
      "type": "cryptographic-asset",
      "name": "golang.org/x/crypto/ssh.PublicKeysCallback",
      "cryptoProperties": {
        "assetType": "protocol"
      },
      "properties": [
        {
          "name": "pkg/gather/ssh/ssh.go:35",
          "value": "gocryptocheck: Use a callback rather than PublicKeys\nso we only consult the agent once the remote server\nwants it."
        }
      ]
    },
    {
      "type": "cryptographic-asset",
      "name": "golang.org/x/crypto/ssh.InsecureIgnoreHostKey",
      "cryptoProperties": {
        "assetType": "protocol"
      },
      "properties": [
        {
          "name": "pkg/gather/ssh/ssh.go:38",
          "value": "gocryptocheck: Used to ignore insecure hosts."
        }
      ]
    },
    {
      "type": "cryptographic-asset",
      "name": "golang.org/x/crypto/ssh/agent.ForwardToAgent",
      "cryptoProperties": {
        "assetType": "protocol"
      },
      "properties": [
        {
          "name": "pkg/gather/ssh/ssh.go:50",
          "value": "gocryptocheck: Used for routing authentication requests to the correct keyring."
        }
      ]
    },
    {
      "type": "cryptographic-asset",
      "name": "golang.org/x/crypto/ssh/agent.RequestAgentForwarding",
      "cryptoProperties": {
        "assetType": "protocol"
      },
      "properties": [
        {
          "name": "pkg/gather/ssh/ssh.go:64",
          "value": "gocryptocheck: Used to setup agent forwarding for the SSH session."
        }
      ]
    },
    {
      "type": "cryptographic-asset",
      "name": "golang.org/x/crypto/ssh.ParseRawPrivateKey",
      "cryptoProperties": {
        "assetType": "protocol"
      },
      "properties": [
        {
          "name": "pkg/gather/ssh/ssh.go:136",
          "value": "gocryptocheck: Used to parse private key data after reading it from a file on disk."
        }
      ]
    },
    {
      "type": "cryptographic-asset",
      "name": "crypto/sha256.New",
      "cryptoProperties": {
        "algorithmProperties": {
          "cryptoFunctions": [
            "digest"
          ],
          "primitive": "hash"
        },
        "assetType": "algorithm"
      },
      "properties": [
        {
          "name": "pkg/tfvars/internal/cache/cache.go:145",
          "value": "gocryptocheck: Used to hash files on disk for cache logic.\nWrap the reader in TeeReader to calculate sha256 checksum on the fly"
        }
      ]
    },
    {
      "type": "cryptographic-asset",
      "name": "crypto/md5.Sum",
      "cryptoProperties": {
        "algorithmProperties": {
          "cryptoFunctions": [
            "digest"
          ],
          "primitive": "hash"
        },
        "assetType": "algorithm"
      },
      "properties": [
        {
          "name": "pkg/types/gcp/clouduid.go:12",
          "value": "gocryptocheck: Used to generate an ID for the Cloud Controller bashed on a hash of the infrastructure ID."
        }
      ]
    },
    {
      "type": "cryptographic-asset",
      "name": "crypto/rand.Int",
      "cryptoProperties": {
        "algorithmProperties": {
          "cryptoFunctions": [
            "unknown"
          ],
          "primitive": "drbg"
        },
        "assetType": "algorithm"
      },
      "properties": [
        {
          "name": "pkg/types/powervs/defaults/platform.go:21",
          "value": "gocryptocheck: Used to generate a random number for the third octet of the network ID."
        }
      ]
    },
    {
      "type": "cryptographic-asset",
      "name": "crypto/rand.Int",
      "cryptoProperties": {
        "algorithmProperties": {
          "cryptoFunctions": [
            "unknown"
          ],
          "primitive": "drbg"
        },
        "assetType": "algorithm"
      },
      "properties": [
        {
          "name": "pkg/types/powervs/validation/platform_test.go:21",
          "value": "gocryptocheck: Used to generate a random number, which is used to get a random zone name for testing.\nget big.Int between 0 and bg"
        }
      ]
    },
    {
      "type": "cryptographic-asset",
      "name": "golang.org/x/crypto/ssh.ParseAuthorizedKey",
      "cryptoProperties": {
        "assetType": "protocol"
      },
      "properties": [
        {
          "name": "pkg/types/validation/installconfig.go:980",
          "value": "gocryptocheck: Reads public SSH keys to perform additional validation that ensure the key is compliant with FIPS compatible key types."
        }
      ]
    },
    {
      "type": "cryptographic-asset",
      "name": "golang.org/x/crypto/ssh.ParseAuthorizedKey",
      "cryptoProperties": {
        "assetType": "protocol"
      },
      "properties": [
        {
          "name": "pkg/validate/validate.go:192",
          "value": "gocryptocheck: Helper function that relies on ssh.ParseAuthorizedKey() to validate the public SSH key, and returns an error if the key is invalid."
        }
      ]
    },
    {
      "type": "cryptographic-asset",
      "name": "crypto/sha256.New",
      "cryptoProperties": {
        "algorithmProperties": {
          "cryptoFunctions": [
            "digest"
          ],
          "primitive": "hash"
        },
        "assetType": "algorithm"
      },
      "properties": [
        {
          "name": "terraform/providers/vsphereprivate/resource_vsphereprivate_import_ova.go:346",
          "value": "gocryptocheck: Used to hash the contents of corrupt .ovf files. The hash is used in error messages.\nGet a sha256 on the corrupt OVA file\nand the size of the file"
        }
      ]
    }
  ]
}
